# 所谓“往返跑方阵”，是指对任意给定的n，将1到n×n的整数依次填写到n×n的方阵中，从右上角第1个格子开始，向下填充；倒底后，往左移动一列，改变方向，向上填充；到最上面一行后，再向左一列，改变方向，向下填充；.…… 以此类推，直到将n×n的方阵填满。本题要求构造这样的“往返跑方阵”。
#
# 输入格式:
# 输入一个正整数n（1⩽n⩽10 ）
#
# 输出格式:
# 输出n×n的往返跑方阵。每行n个数字，每个数字占3位，右对齐
#
# 输入样例1:
# 在这里给出一组输入。例如：
#
# 3
# 输出样例1:
# 在这里给出相应的输出。例如：
#
#   7  6  1
#   8  5  2
#   9  4  3
# 输入样例2:
# 在这里给出一组输入。例如：
#
# 5
# 输出样例2:
# 在这里给出相应的输出。例如：
#
#  21 20 11 10  1
#  22 19 12  9  2
#  23 18 13  8  3
#  24 17 14  7  4
#  25 16 15  6  5
n = int(input())
lst = [[1 for row in range(n)] for col in range(n)]
x = 1
k = n-1
for i in range(n):
    for j in range(n):
        if i % 2 == 0:  # 奇数列，从上往下递增
            lst[j][i] = x
            x += 1
        else:
            lst[k][i] = x   # 奇数列，从下往上递增
            x += 1
            k -= 1
    k = n - 1
# 交换列（相当于逆序列）
for i in range(n):
    for j in range(int(n/2)):
        lst[i][j], lst[i][n-1-j] = lst[i][n-1-j], lst[i][j]
for i in range(n):
    for j in range(n):
        print('%3d' % lst[i][j], end='')
    if i != n-1:
        print()
